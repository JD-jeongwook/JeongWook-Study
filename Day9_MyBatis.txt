MyBatis 강좌

MyBatis : 자바 오브젝트와 SQL문 사이의 자동 Mapping 기능을 지원하는 프레임워크이다.
SQL을 별도의 파일로 분리해서 관리하게 해주며,
객체 - SQL 사이의 파라미터 Mapping작업을 자동으로 해준다.

MyBatis의 특징
 1 ) 쉬운 접근성과 코드의 간결함.
	- 가장 간단한 퍼시턴스 프레임워크이다.
	- JDBC의 모든 기능을 MyBatis가 대부분 제공한다.
	- 복잡한 JDBC코드를 걷어내어 깔끔한 소스코드를 유지할 수 있다.
	- 수동적인 파라미터 설정과 쿼리 결과에 대한 매핑 구문을 제거할 수 있다.
 2 ) SQL문과 프로그래밍 코드의 분리
	- SQL에 변경이 있을 때마다 자바 코드를 수정하거나 컴파일 하지 않아도 된다.
	- SQL 작성과 관리,검토를 개발자가 아닌 다른 사람에게 맡길 수도 있다.
 3 ) 다양한 프로그래밍 언어로 구현가능
	- Java 뿐만 아니라 C#, .NET , Ruby와 같은 언어에서도 제공하고있다.

MyBatis3의 주요 컴포넌트의 역할
 - MyBatis 설정파일(SqlMapConfig.xml) : 데이터베이스의 접속 주소 정보나 Mapping 파일의 경로 등의 고정된 환경정보를 설정한다.
 - SqlSessionFactoryBuilder : MyBatis 설정 파일을 바탕으로 SqlSessionFactiory를 생성한다.
 - SqlSessionFactory : SqlSession을 생성한다.
 - SqlSession - 핵심적인 역할을 하는 클래스로서, SQL 실행이나 트랜잭션 관리를 실행한다.
	      - SQL Session 오브젝트는 * Thread-Safe 하지 않으므로 thread마다 필요에 따라 생성한다.
 - mapping 파일 (user.xml) : SQL문과 OR Mapping을 설정한다.
 
 * Thread-safe 
	- 여러 thread에 의해서 수행 될 때를 말한다.
	- 멀티 쓰레드 환경에서, 올바른 결과를 내게 해주는 것을 thread safe 라고 한다.

MyBatis-Spring의 주요 컴포넌트의 역할
 - MyBatis 설정파일(SqlMapConfig.xml) : VO ( ValueObject ) 객체의 정보를 설정한다.
 - SqlSessionFactoryBean - MyBatis 설정파일을 바탕으로 SqlSessionFactory를 생성한다.
		      - Spring Bean으 로 등록해야한다.
 - SqlSessionTemplate - 핵심적인 역할을 하는 클래스로서 SQL 실행이나 트랜잭션 관리를 한다.
		  - SqlSession 인터페이스를 구현하며, Thread-safe하다.
		  - Spring Bean으로 등록해야 한다.
 - Mapping 파일(user.xml) : SQL문과 OR Mapping을 설정한다.
 - Spring Bean 설정파일 (beans.xml) - SqlSessionFactoryBean을 Bean 등록할 때 DataSource 정보와 MyBatis Config 파일정보 Mapping 파일의 정보를 함께 설정한다.
			       - SqlSessionTemplate을 Bean으로 등록한다. 

---------------------------------------------------------------------------------------------------------------

MyBatis와 MySQL을 연동하기 위해서 pom.xml에 dependency를 추가해줘야한다.
추가하는 방법은 maven을 이용해서 복사 붙혀넣기만 하면된다고한다.
maven : 프로젝트 관리를 편하게 해주는 도구이다.
( https://mvnrepository.com/ 에서 검색후 pom.xml에 적용)

기본적으로 MySQL같은 많이 사용하는 모듈들은 version을 Spring boot에서 직접관리하기때문에
버전은 보통 삭제를 한다. << X     Spring Boot를 사용할때 적용이라한다.. 