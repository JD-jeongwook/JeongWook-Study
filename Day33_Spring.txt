유튜브 강의 12강 - Detail 컨트롤러 추가와 View 페이지 집중화의 필요성

지난시간에 만든 ListController를 그대로 사용해서 DetailController를 하나만든다.

그다음 dispatcher-servlet.xml 파일에서 DetailController에 대한 매핑을 한다.

다음시간에는 페이지마다 가지고있는 공통분모를 집중하기위해 tiles 를 사용할것이다.
Maven을 사용해서 할것이다.

유튜브 강의 13강 - 페이지 공통분모 집중화

사이트를 완성했을때 공통부분을 수정하게되면 모든 페이지를 다 수정해야만 한다.

페이지에 공통으로 들어가는 header , footer , aside 같은것들을 분리해서 공통으로 참조하도록 만들것이다.

기존에는 <jsp:include page="가져올파일.jsp" />  처럼 include를 사용했다.
  
하지만 이렇게 include를 했을때 모든 파일에 include를 해줘야한다는 불편함이있다.
그래서 jsp가 제공하는 기능이아닌, maven이 제공하는 tiles를 사용할것이다.

그렇게하면 공통부분인 header,footer,aside가 아닌 메인부분만 코딩하며 작업할수있다.

유튜브 강의 14강 - 페이지 모듈 분리하기

기존에 index.jsp , list.jsp , detail.jsp 에 있던 header 부분과 footer 부분을 잘라내어

view 폴더안에 inc ( include ) 폴더안에 각각 header.jsp, footer.jsp 를 만들어서
붙여넣기해준다.

그리고 list.jsp 에서 visual부분에 해당되는

	<div id="visual">
		<div class="content-container"></div>
	</div>

코드를 view --> customer ( 새로만듬 ) --> inc 폴더 안에 visual.jsp를 생성해서
넣어준다.

기존에 inc 폴더에 넣어주지 않는이유는 
기존 inc 폴더안에있는 header와 footer는 프로젝트 내 모든 jsp파일에 공통으로 들어가지만

costomer폴더안에 inc는 costomer부분 ( 공지사항 부분 ) 에서만 사용하는 코드이기때문이다.
detail과 list가 있는 notice폴더 또한 costomer 폴더안에 넣어주자.

그리고 공지사항부분에서만 사용하는 aside 코드또한
costomer --> inc 폴더 안에 aside.jsp 를 생성해서 거기다 붙여넣기 해준다.

그러면 list.jsp 파일에 레이아웃 부분만 남게된다.
레이아웃 부분도 inc폴더로 옮겨주기위해 list.jsp를 복사해서 inc폴더로 옮겨준다음,
이름을 layout.jsp로 변경하고, <main></main> 부분을 모두지워주면
레이아웃에 해당되는 부분만 남게 된다.
그다음 list.jsp 파일에 <main></main> 부분만 남기고 모두 지워준다.

detail.jsp 도 마찬가지로 main만 남겨준다.
